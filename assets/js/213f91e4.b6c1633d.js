"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1150],{2603:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var t=s(2794),a=s(4848),r=s(8453);const i={title:"Semantic search for dynamically built queries in Java and CodeQL",tags:["codeql","java","sql"]},o="Semantic search for dynamically built queries in Java and CodeQL",l={authorsImageUrls:[]},c=[];function d(e){const n={li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"There was a challenge for me recently to search for SQL queries in large codebase. There is a problem\nwith using basic grep or even IntelliJ search here because of the performance issues."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"queries are long and dynamically appended"}),"\n",(0,a.jsx)(n.li,{children:"codebase is large"}),"\n",(0,a.jsx)(n.li,{children:"string searching is not performant enough."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"An answer how to solve this task is buried in history of beginnings of static analysis tools. The first tools\nused basic regexes, but that turned out inefficient pretty quickly. Then incrementally more focus has been\nput to parse source files to Abstract Syntax Trees which is allows more freedom to write queries. Then\nfinally Data Flow approach was added alongside Taint Analysis to make current landscape of security today."}),"\n",(0,a.jsx)(n.p,{children:"Semantic searching has 2 advantages:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"searching bare tokens is orders of magnitude faster than strings, in turn searching Abstract Syntax Trees\nis order of magnitude faster than tokens"}),"\n",(0,a.jsx)(n.li,{children:"semantic search offers more precision in designing the queries which only reinforces the first point."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"CodeQL"})," is one such tool that knows the syntax of major languages (Java) and caters for performant search of\nlarge codebases. I decided to have fun with it over the weekend and push it to it's limits as searching for\ndynamic queries is hard enough. I will show how to set up the project and write some queries for toy source file."]}),"\n",(0,a.jsx)(n.p,{children:"Let's get started."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},2794:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/03/9/","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-03-9.md","source":"@site/blog/2025-03-9.md","title":"Semantic search for dynamically built queries in Java and CodeQL","description":"There was a challenge for me recently to search for SQL queries in large codebase. There is a problem","date":"2025-03-09T00:00:00.000Z","tags":[{"inline":true,"label":"codeql","permalink":"/blog/tags/codeql"},{"inline":true,"label":"java","permalink":"/blog/tags/java"},{"inline":true,"label":"sql","permalink":"/blog/tags/sql"}],"readingTime":6.495,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Semantic search for dynamically built queries in Java and CodeQL","tags":["codeql","java","sql"]},"unlisted":false,"nextItem":{"title":"Wring simple parser with Megaparsec in Haskell","permalink":"/blog/2025/03/3/"}}')}}]);