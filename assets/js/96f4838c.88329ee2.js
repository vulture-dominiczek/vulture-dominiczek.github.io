"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9532],{9337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var i=n(8701),r=n(4848),s=n(8453);const o={title:"Reflections after writing simple Spring Boot library",tags:["systemdesign","spring","java"]},a="Reflections after writing simple Spring Boot library",l={authorsImageUrls:[]},c=[];function u(e){const t={em:"em",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Sometimes learning from adversity is better than trying to avoid it.\nTaking it into careful consideration provides valuable lessons that will support you in the future."})}),"\n",(0,r.jsx)(t.p,{children:"I appreciate my job for one particular thing. That is, it provides steady steam of difficult problems that challenge my intellect. Recently I tried to wrap my head around problem how to write tests for semi-large Spring Boot codebase and refactor it (with no tests whatsoever)."}),"\n",(0,r.jsx)(t.p,{children:"I started from the assumption that when you don't have any legacy tests at hand first you write them. How can you know you don't break functionality without running the tests? But the code was very unfriendly and writing them would require writing mocks."}),"\n",(0,r.jsx)(t.p,{children:"So I thought - why not automate stuff a little bit:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"instrument given beans with reflection"}),"\n",(0,r.jsx)(t.li,{children:"dump args and results to json"}),"\n",(0,r.jsx)(t.li,{children:"load json directly in tests instead of writing mocks in plain Java"}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},8701:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/11/5/","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-5.md","source":"@site/blog/2024-11-5.md","title":"Reflections after writing simple Spring Boot library","description":"*Sometimes learning from adversity is better than trying to avoid it.","date":"2024-11-05T00:00:00.000Z","tags":[{"inline":true,"label":"systemdesign","permalink":"/blog/tags/systemdesign"},{"inline":true,"label":"spring","permalink":"/blog/tags/spring"},{"inline":true,"label":"java","permalink":"/blog/tags/java"}],"readingTime":3.83,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Reflections after writing simple Spring Boot library","tags":["systemdesign","spring","java"]},"unlisted":false,"prevItem":{"title":"Thoughts on observability","permalink":"/blog/2024/12/15/"},"nextItem":{"title":"1BRC Challenge","permalink":"/blog/2024/10/29/"}}')}}]);