(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[298],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=u(n),g=r,m=h["".concat(s,".").concat(g)]||h[g]||c[g]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"===typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3893:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/stewardship",function(){return n(9196)}])},9196:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});n(7294);var a=n(3905),r=n(9008);function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i={},l=function(e){var t=e.children;return(0,a.kt)("main",{className:"md:w-3/5 text-lg mr-auto ml-auto mt-20 pb-20 article"},t)};function s(e){var t=e.components,n=o(e,["components"]);return(0,a.kt)(l,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.default,{mdxType:"Head"},(0,a.kt)("script",{defer:!0},"hljs.highlightAll();"),(0,a.kt)("title",null,"Languages, evolution and compatibility"),(0,a.kt)("meta",{name:"Description",content:"Languages, evolution and compatibility"})),(0,a.kt)("h1",null,"Languages, evolution and compatibility"),(0,a.kt)("p",null,"Today I watched amazing ",(0,a.kt)("a",{href:"https://www.youtube.com/watch?v=2y5Pv4yN0b0"},"talk")," by Brian Goetz on\nhow is it to maintain a language. This video spurred lots of thoughts in my head and they still keep spinning\nso I thought I will write a post. The languages come and go and they evolve. What causes them to change?"),(0,a.kt)("h3",null,"Evolutionary model"),(0,a.kt)("p",null,"In a video there was an analogy given as ",(0,a.kt)("b",null,"the problems are prey and languages are predators"),". The language is\neither fit for the problem in which case the community thrives or not and it loses popularity and dies out eventually."),(0,a.kt)("p",null,"Mathematic models always predated the development of algorithms and infrastructure.\nWhat is called new paradigm is actually incarnation of some theory/model invented long\ntime ago. So problems as such are pretty constant, but ",(0,a.kt)("b",null,"the need what to solve changes"),"."),(0,a.kt)("p",null,"What really keeps changing stems from technological advance:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"people started using facebook so there is a need for graph algorithms"),(0,a.kt)("li",{parentName:"ul"},"OO and functional programming got traction, because they are closer to real life"),(0,a.kt)("li",{parentName:"ul"},"cheap computers and specialization got as to the cloud"),(0,a.kt)("li",{parentName:"ul"},"the data got overwhelmingly big, so we need to process them in parallel ")),(0,a.kt)("p",null,"This obviously had to result either in birth of new languages or evolution of the older.\nHowever there is a limit in how far the evolution can go for particular language. In the beginning some assumptions were made\nand this narrowed down the range of possibilities for next language features. I have never seen a language fully rewritten\nto contain completely different features. Sometimes there is possiblity to fix this and that but the core is set in stone."),(0,a.kt)("p",null,"You can't introduce feature in a range of small steps over the years, because\nplanning the undertaking wouldn't fit in anyones head for sure and it would take to long. It's better to create new language."),(0,a.kt)("h3",null,"Free market"),(0,a.kt)("p",null,"Complementary view of programming languages would be as they are the bunch of shops,\ncompeting with each other for developers popularity. Some are\nhave big impact on the programming world. Some are smaller but more specialized.\nWhat is constant is that the language itself (it's maintainers) want to attract as much of developers as possible."),(0,a.kt)("p",null,"If one language introduces new feature in matter of months/years that proves valuable everybody else jumps on the wagon\nand implement it's for themselves. ",(0,a.kt)("b",null,"Scala")," capitalized on Java's weaknesses and got type system and functional programming\nreally well. But now Java is catching up and merges the features that set it apart.\nAnd Scala doesn't have big industry adoption and no company backs it, which will make it remain niche and possibly forgotten."),(0,a.kt)("p",null,"Programmer's are very fashionable people. And fashions come and go also, and so the features in languages.\nThese days functional programming is very popular. Mainly because of lack of side effects which is good for computation at\nscale. But in future we can have different kinds of architectures (quantum computing) which may reduce big distributed\narchitectures to monolith once again."),(0,a.kt)("h3",null,"Conclusion"),(0,a.kt)("p",null,"So the evolution analogy works for small to medium features until it is practical to incorporate it in current design. Whenever\nthere is paradigm shift new langauges spring up. And languages features are largely influenced by popularity among developers\nbecause every language tries to maximize developers happiness. There is constant push and pull between compliance to the existing\ncodebase, popularity and new trends and specializing in being one tool that does solve the problem really well."),(0,a.kt)("p",null,"Thanks for reading."),(0,a.kt)("br",null),(0,a.kt)("br",null))}s.isMDXComponent=!0},9008:function(e,t,n){e.exports=n(5443)}},function(e){e.O(0,[774,888,179],(function(){return t=3893,e(e.s=t);var t}));var t=e.O();_N_E=t}]);