(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[309],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return p}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},f),{},{components:n})):r.createElement(h,i({ref:t},f))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"===typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1789:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/ecommerce",function(){return n(4284)}])},4284:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});n(7294);var r=n(3905),o=n(9008);function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i={},l=function(e){var t=e.children;return(0,r.kt)("main",{className:"md:w-3/5 text-lg mr-auto ml-auto mt-20 pb-20 article"},t)};function s(e){var t=e.components,n=a(e,["components"]);return(0,r.kt)(l,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.default,{mdxType:"Head"},(0,r.kt)("script",{defer:!0},"hljs.highlightAll();"),(0,r.kt)("title",null,"Implementing e-commerce on Kafka"),(0,r.kt)("meta",{name:"Description",content:"Implementing e-commerce on Kafka"})),(0,r.kt)("h1",null,"Implementing e-commerce on Kafka"),(0,r.kt)("p",null,"I noticed that I started slightly forgetting what I learned for Kubernetes certificate so I was looking\nfor some idea for application to write. The model I came up with is not very original but suffices for\na sample app. It's an example of streaming and batching and you can find it ",(0,r.kt)("a",{href:"https://github.com/dgawlik/kafka-lambda"},"here")),(0,r.kt)("figure",{className:"mt-10"},(0,r.kt)("img",{className:"mx-auto",src:"/lambda.png",width:"60%",height:"60%"})),(0,r.kt)("p",null,"I will only write about some obstacles I found on the way..."),(0,r.kt)("h3",null,"Kafka Streams"),(0,r.kt)("p",null,"After some time I have mixed feeling about it. There is nothing that ",(0,r.kt)("b",null,"Project Reactor")," can't do for you what Kafka Streams can,\nand it's more feature rich. One distinct part of Kafka Streams is ",(0,r.kt)("b",null,"record / table duality")," but you can implement\nit for yourself in couple of lines of code. The part that made me rewrite app to Flux was that you can't do windowing without converting result\nto KTable and it requires you to write serializers to store it on disk. Kafka doesn't even have serializers for basic\ncollections. Of course I might be unaware of some more complex stuff but at first glance Kafka Streams is not so great."),(0,r.kt)("h3",null,"Replication of topics"),(0,r.kt)("p",null,"One of implementation details that is not very well documented is that you can specify replication factor per topic. This\nmakes sense, but why is the default for this config for single node setup equal to 3? Actually this is a bug, and I lost\na lot of time figuring it out. So you have to set default replication factor for any new topic to 1 or create topic with\nreplication factor specified."),(0,r.kt)("h3",null,"Advertised listeners"),(0,r.kt)("p",null,"If you are using Kuberenetes this property is crucial. Without it Kafka broker broadcasts it's address as it's localhost\nhostname. Which of course is not recognized by k8s dns. I also spent some time for this, it's actually good that I had a\nglipse of documentation first so I could associate this bug with it."),(0,r.kt)("h3",null,"Logging"),(0,r.kt)("p",null,"There was a time also that nothing was showing in logs so I assumed the stream is blocking. But it turned out that\nit failed and deregistered from kafka. The real issue was a lack of SLF4j logger so that errors were unvisible."),(0,r.kt)("h3",null,"Conclusion"),(0,r.kt)("p",null,"I probably spent too much time for it. But eventually I made it and now I remember Kubernetes for sure. Kafka is nice\nbut has couple of corner cases of configuration that are worth to know."),(0,r.kt)("br",null),(0,r.kt)("br",null))}s.isMDXComponent=!0},9008:function(e,t,n){e.exports=n(5443)}},function(e){e.O(0,[774,888,179],(function(){return t=1789,e(e.s=t);var t}));var t=e.O();_N_E=t}]);